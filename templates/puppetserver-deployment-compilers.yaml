{{- if and .Values.puppetserver.compilers.enabled ( eq .Values.puppetserver.compilers.kind "Deployment" )}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "puppetserver.fullname" . }}-puppetserver-compiler
  labels:
    {{- include "puppetserver.puppetserver-compilers.labels" . | nindent 4 }}
    {{- with .Values.puppetserver.compilers.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  {{- if .Values.puppetserver.compilers.annotations }}
  annotations:
    {{- toYaml .Values.puppetserver.compilers.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.puppetserver.compilers.autoScaling.enabled }}
  replicas: {{ .Values.puppetserver.compilers.manualScaling.compilers }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "puppetserver.puppetserver-compilers.matchLabels" . | nindent 6 }}
  {{- if .Values.puppetserver.compilers.updateStrategy }}
  strategy: {{- toYaml .Values.puppetserver.compilers.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "puppetserver.puppetserver-compilers.labels" . | nindent 8 }}
        {{- with .Values.puppetserver.compilers.extraLabels -}}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/hiera-configmap: {{ include (print $.Template.BasePath "/hiera-configmap.yaml") . | sha256sum }}
        {{- if .Values.r10k.asSidecar }}
        checksum/r10k-code.configmap: {{ include (print $.Template.BasePath "/r10k-code.configmap.yaml") . | sha256sum }}
        checksum/r10k-hiera.configmap: {{ include (print $.Template.BasePath "/r10k-hiera.configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if and .Values.singleCA.enabled .Values.singleCA.crl.asSidecar }}
        checksum/crl-config: {{ include (print $.Template.BasePath "/update-crl-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.puppetserver.customconfigs.enabled }}
        checksum/custom-configs.configmap: {{ include (print $.Template.BasePath "/puppetserver-customconfigs-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.puppetserver.customentrypoints.enabled }}
        checksum/custom-entrypoints.configmap: {{ include (print $.Template.BasePath "/puppetserver-custom-entrypoints-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      hostname: puppet
      {{- if .Values.puppetserver.serviceAccount.enabled }}
      serviceAccountName: {{ include "puppetserver.serviceAccountName" . }}
      {{- end }}
      initContainers:
        - name: perms-and-dirs
          image: "{{.Values.puppetserver.image}}:{{.Values.puppetserver.tag}}"
          imagePullPolicy: "{{.Values.puppetserver.pullPolicy}}"
          resources:
            requests:
              memory: 128Mi
              cpu: 200m
            limits:
              memory: 256Mi
              cpu: 300m
          env:
            {{- range $key, $value := .Values.global.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- range $key, $value := .Values.puppetserver.compilers.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          command: [ "sh", "-c" ]
          args:
            - mkdir -p /etc/puppetlabs/puppet/eyaml/keys;
              mkdir -p /etc/puppetlabs/code/environments;
              mkdir -p /etc/puppetlabs/puppet/manifests;
              chown -R puppet:puppet /etc/puppetlabs;
              {{- if .Values.r10k.asSidecar }}
              {{- if .Values.puppetserver.puppeturl }}
              mkdir -p /etc/puppetlabs/code/r10k_cache;
              cp /tmp/puppet/configmap/r10k_code_entrypoint.sh /etc/puppetlabs/puppet/r10k_code_entrypoint.sh;
              cp /tmp/puppet/configmap/r10k_code_cronjob.sh /etc/puppetlabs/puppet/r10k_code_cronjob.sh;
              cp /tmp/puppet/configmap/r10k_code.yaml /etc/puppetlabs/puppet/r10k_code.yaml;
              chown puppet:puppet /etc/puppetlabs/puppet/r10k_code_entrypoint.sh /etc/puppetlabs/puppet/r10k_code_cronjob.sh /etc/puppetlabs/puppet/r10k_code.yaml;
              chmod +x /etc/puppetlabs/puppet/r10k_code_entrypoint.sh /etc/puppetlabs/puppet/r10k_code_cronjob.sh;
              {{- end }}
              {{- if (include "hiera.enable" .) }}
              cp /tmp/puppet/configmap/r10k_hiera_entrypoint.sh /etc/puppetlabs/puppet/r10k_hiera_entrypoint.sh;
              cp /tmp/puppet/configmap/r10k_hiera_cronjob.sh /etc/puppetlabs/puppet/r10k_hiera_cronjob.sh;
              cp /tmp/puppet/configmap/r10k_hiera.yaml /etc/puppetlabs/puppet/r10k_hiera.yaml;
              chown puppet:puppet /etc/puppetlabs/puppet/r10k_hiera_entrypoint.sh /etc/puppetlabs/puppet/r10k_hiera_cronjob.sh /etc/puppetlabs/puppet/r10k_hiera.yaml;
              chmod +x /etc/puppetlabs/puppet/r10k_hiera_entrypoint.sh /etc/puppetlabs/puppet/r10k_hiera_cronjob.sh;
              {{- end }}
              {{- end }}
              {{- if .Values.hiera.config }}
              cp /tmp/puppet/configmap/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml;
              chown puppet:puppet /etc/puppetlabs/puppet/hiera.yaml;
              {{- end }}
              cp /tmp/puppet/configmap/site.pp /etc/puppetlabs/puppet/manifests/site.pp;
              chown puppet:puppet /etc/puppetlabs/puppet/manifests/site.pp;
              {{- if or (.Values.hiera.eyaml.public_key) (.Values.hiera.eyaml.private_key) (.Values.hiera.eyaml.existingMap) (.Values.hiera.eyaml.existingSecret) }}
              cp /tmp/puppet/configmap/eyaml/*private_key.pkcs7.pem /etc/puppetlabs/puppet/eyaml/keys/;
              chown puppet:puppet /etc/puppetlabs/puppet/eyaml/keys/*private_key.pkcs7.pem;
              cp /tmp/puppet/configmap/eyaml/*public_key.pkcs7.pem /etc/puppetlabs/puppet/eyaml/keys/;
              chown puppet:puppet /etc/puppetlabs/puppet/eyaml/keys/*public_key.pkcs7.pem;
              {{- end }}
              {{- if .Values.puppetserver.extraInitArgs }}
              {{- .Values.puppetserver.extraInitArgs | nindent 14 }}
              {{- end }}
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          volumeMounts:
            - name: puppet-puppet-storage
              mountPath: /etc/puppetlabs/puppet/
            - name: puppet-code-storage
              mountPath: /etc/puppetlabs/code/
            {{- if .Values.r10k.asSidecar }}
            {{- if and .Values.puppetserver.puppeturl }}
            - name: r10k-code-volume
              mountPath: /tmp/puppet/configmap/r10k_code_entrypoint.sh
              subPath: r10k_code_entrypoint.sh
            - name: r10k-code-volume
              mountPath: /tmp/puppet/configmap/r10k_code_cronjob.sh
              subPath: r10k_code_cronjob.sh
            - name: r10k-code-volume
              mountPath: /tmp/puppet/configmap/r10k_code.yaml
              subPath: r10k_code.yaml
            {{- end }}
            {{- if (include "hiera.enable" .) }}
            - name: r10k-hiera-volume
              mountPath: /tmp/puppet/configmap/r10k_hiera_entrypoint.sh
              subPath: r10k_hiera_entrypoint.sh
            - name: r10k-hiera-volume
              mountPath: /tmp/puppet/configmap/r10k_hiera_cronjob.sh
              subPath: r10k_hiera_cronjob.sh
            - name: r10k-hiera-volume
              mountPath: /tmp/puppet/configmap/r10k_hiera.yaml
              subPath: r10k_hiera.yaml
            {{- end }}
            {{- end }}
            {{- if .Values.hiera.config }}
            - name: hiera-volume
              mountPath: /tmp/puppet/configmap/hiera.yaml
              subPath: hiera.yaml
            {{- end }}
            - name: manifests-volume
              mountPath: /tmp/puppet/configmap/site.pp
              subPath: site.pp
            {{- if and (or (.Values.hiera.eyaml.existingMap) (.Values.hiera.eyaml.existingSecret)) (not .Values.hiera.eyaml.public_key) (not .Values.hiera.eyaml.private_key)  }}
            - name: eyaml-volume
              mountPath: /tmp/puppet/configmap/eyaml
            {{- end }}
            {{- if and (or (.Values.hiera.eyaml.public_key) (.Values.hiera.eyaml.private_key)) (not .Values.hiera.eyaml.existingSecret)}}
            - name: eyamlpub-volume
              mountPath: /tmp/puppet/configmap/eyaml/public_key.pkcs7.pem
              subPath: public_key.pkcs7.pem
            - name: eyamlpriv-volume
              mountPath: /tmp/puppet/configmap/eyaml/private_key.pkcs7.pem
              subPath: private_key.pkcs7.pem
            {{- end }}
      containers:
        - name: {{ template "puppetserver.fullname" . }}
          image: "{{.Values.puppetserver.image}}:{{.Values.puppetserver.tag}}"
          imagePullPolicy: "{{.Values.puppetserver.pullPolicy}}"
          resources:
            {{- toYaml .Values.puppetserver.masters.resources | nindent 12 }}
          env:
            # necessary to set certname and server in puppet.conf, required by
            # puppetserver ca cli application
            {{- if .Values.singleCA.enabled }}
              # set the hostname to puppet to identify easily the certificate
            - name: PUPPETSERVER_HOSTNAME
              value: puppet
            {{- end }}
            - name: PUPPET_MASTERPORT
              value: "{{ template "puppetserver.puppetserver-masters.port" . }}"
            - name: DNS_ALT_NAMES
              value: "{{ template "puppetserver.puppetserver.agents-to-masters.serviceName" . }},{{ template "puppetserver.puppetserver-masters.serviceName" . }},{{.Values.puppetserver.masters.fqdns.alternateServerNames}}"
            - name: PUPPETDB_SERVER_URLS
              value: "https://{{ default ( include "puppetdb.fullname" . ) .Values.singleCA.puppetdb.overrideHostname }}:8081"
            - name: CA_ENABLED
              value: "false"
            - name: CA_ALLOW_SUBJECT_ALT_NAMES
              value: "true"
            - name: CA_HOSTNAME
              value: "{{ template "puppetserver.puppetserver-masters.serviceName" . }}"
            - name: CA_MASTERPORT
              value: "{{ template "puppetserver.puppetserver-masters.port" . }}"
            {{- range $key, $value := .Values.global.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- range $key, $value := .Values.puppetserver.compilers.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          readinessProbe:
            httpGet:
              path: /status/v1/simple
              port: {{ template "puppetserver.puppetserver-compilers.port" . }}
              scheme: HTTPS
            periodSeconds: {{ .Values.puppetserver.compilers.readinessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.puppetserver.compilers.readinessProbeTimeout }}
            failureThreshold: {{ .Values.puppetserver.compilers.readinessProbeFailureThreshold }}
            successThreshold: {{ .Values.puppetserver.compilers.readinessProbeSuccessThreshold }}
          livenessProbe:
            tcpSocket:
              port: {{ template "puppetserver.puppetserver-compilers.port" . }}
            periodSeconds: {{ .Values.puppetserver.compilers.livenessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.puppetserver.compilers.livenessProbeTimeout }}
            failureThreshold: {{ .Values.puppetserver.compilers.livenessProbeFailureThreshold }}
            successThreshold: {{ .Values.puppetserver.compilers.livenessProbeSuccessThreshold }}
          startupProbe:
            tcpSocket:
              port: {{ template "puppetserver.puppetserver-compilers.port" . }}
            periodSeconds: {{ .Values.puppetserver.compilers.startupProbePeriodSeconds }}
            failureThreshold: {{ .Values.puppetserver.compilers.startupProbeFailureThreshold }}
          ports:
            - containerPort: {{ template "puppetserver.puppetserver-compilers.port" . }}
          volumeMounts:
            - name: puppet-code-storage
              mountPath: /etc/puppetlabs/code/
            - name: puppet-puppet-storage
              mountPath: /etc/puppetlabs/puppet/
            # - name: puppet-serverdata-storage
            #   mountPath: /opt/puppetlabs/server/data/puppetserver/
            {{- range $key, $value := .Values.puppetserver.customconfigs.configmaps }}
            - name: puppetserver-custom-configs
              mountPath: /etc/puppetlabs/puppetserver/conf.d/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
            {{- range $key, $value := .Values.puppetserver.customentrypoints.configmaps }}
            - name: puppetserver-customentrypoints
              mountPath: /docker-custom-entrypoint.d/{{ $key }}
              subPath: {{ $key }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.puppetserver.securityContext | nindent 12 }}
        {{- if and .Values.puppetserver.puppeturl .Values.r10k.asSidecar}}
        # r10k Code Sidecar
        - name: r10k-code
          image: "{{ tpl .Values.r10k.image . }}:{{ tpl .Values.r10k.tag . }}"
          imagePullPolicy: {{ tpl .Values.r10k.imagePullPolicy . }}
          resources:
            {{- toYaml .Values.r10k.code.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.global.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          {{- range $key, $value := .Values.r10k.code.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          command: [ "sh", "-c", "/etc/puppetlabs/puppet/r10k_code_entrypoint.sh" ]
          securityContext:
            runAsUser: {{ .Values.global.securityContext.runAsUser }}
            runAsGroup: {{ .Values.global.securityContext.runAsGroup }}
            {{- toYaml .Values.r10k.podSecurityContext | nindent 12 }}
            {{- toYaml .Values.r10k.containerSecurityContext | nindent 12 }}
          volumeMounts:
          {{- with .Values.r10k.code.viaSsh.credentials }}
          {{- if or (.existingSecret) (and (.ssh.value) (.known_hosts.value)) }}
          - name: r10k-code-ssh
            mountPath: /home/puppet/.ssh
          {{- end }}
          {{- end }}
          {{- with .Values.r10k.code.viaHttps.credentials }}
          {{- if or .existingSecret .netrc.value }}
          - name: r10k-code-netrc
            mountPath: /home/puppet/.netrc
            subPath: .netrc
          {{- end }}
          {{- end }}
          - name: puppet-code-storage
            mountPath: /etc/puppetlabs/code/
          - name: puppet-puppet-storage
            mountPath: /etc/puppetlabs/puppet/
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "test -f {{ .Values.r10k.code.cronJob.successFile }}"]
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
        {{- end }}
        {{- if and (include "hiera.enable" .) .Values.r10k.asSidecar }}
        # r10k Hiera Sidecar
        - name: r10k-hiera
          image: "{{ tpl .Values.r10k.image . }}:{{ tpl .Values.r10k.tag . }}"
          imagePullPolicy: {{ tpl .Values.r10k.imagePullPolicy . }}
          resources:
            {{- toYaml .Values.r10k.hiera.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.global.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          {{- range $key, $value := .Values.r10k.hiera.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          command: [ "sh", "-c", "/etc/puppetlabs/puppet/r10k_hiera_entrypoint.sh" ]
          securityContext:
            runAsUser: {{ .Values.global.securityContext.runAsUser }}
            runAsGroup: {{ .Values.global.securityContext.runAsGroup }}
            {{- toYaml .Values.r10k.podSecurityContext | nindent 12 }}
            {{- toYaml .Values.r10k.containerSecurityContext | nindent 12 }}
          volumeMounts:
          {{- with .Values.r10k.hiera.viaSsh.credentials }}
          {{- if or (.existingSecret) (and (.ssh.value) (.known_hosts.value)) }}
          - name: r10k-hiera-ssh
            mountPath: /home/puppet/.ssh
          {{- end }}
          {{- end }}
          {{- with .Values.r10k.hiera.viaHttps.credentials }}
          {{- if or .existingSecret .netrc.value }}
          - name: r10k-hiera-netrc
            mountPath: /home/puppet/.netrc
            subPath: .netrc
          {{- end }}
          {{- end }}
          - name: puppet-code-storage
            mountPath: /etc/puppetlabs/code/
          - name: puppet-puppet-storage
            mountPath: /etc/puppetlabs/puppet/
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "test -f {{ .Values.r10k.hiera.cronJob.successFile }}"]
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
        {{- end }}
        {{- if and .Values.singleCA.enabled .Values.singleCA.crl.asSidecar }}
        # singleCA crl script update Sidecar
        - name: update-crl
          image: "{{ tpl .Values.singleCA.crl.image . }}:{{ tpl .Values.singleCA.crl.tag . }}"
          imagePullPolicy: {{ tpl .Values.singleCA.crl.imagePullPolicy . }}
          resources:
            {{- toYaml .Values.singleCA.crl.resources | nindent 12 }}
          env:
          - name: SSL_PATH
            value: /etc/puppetlabs/puppet/ssl
          - name: CRL_SCRIPT_PATH
            value: /etc/puppetlabs/puppet/ssl
          {{- range $key, $value := .Values.global.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          {{- range $key, $value := .Values.puppetserver.masters.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          {{- range $key, $value := .Values.singleCA.crl.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          command: ["sh", "-c", "/etc/puppetlabs/puppet/ssl/crl_entrypoint.sh" ]
          securityContext:
            runAsUser: {{ .Values.global.securityContext.runAsUser }}
            runAsGroup: {{ .Values.global.securityContext.runAsGroup }}
            {{- toYaml .Values.singleCA.crl.securityContext | nindent 12 }}
          volumeMounts:
          - name: puppet-puppet-storage
            mountPath: /etc/puppetlabs/puppet/
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "test -f ~/.crl_cronjob.success"]
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
        {{- end }}
        {{- with .Values.puppetserver.compilers.extraContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.singleCA.puppetdb.overrideHostname }}
      hostAliases:
        - ip: {{ required "A valid .Values.puppetdb.service.clusterIP required!" .Values.puppetdb.service.clusterIP }}
          hostnames:
          - {{ .Values.singleCA.puppetdb.overrideHostname }}
      {{- end }}
      imagePullSecrets:
      {{- with .Values.global.imagePullSecrets }}
      {{ toYaml . }}
      {{- end }}
      securityContext:
        fsGroup: 999   # "puppet" GID
      volumes:
        - name: puppet-code-storage
        {{- if .Values.puppetserver.customPersistentVolumeClaim.code.enable }}
          {{- toYaml .Values.puppetserver.customPersistentVolumeClaim.code.config | nindent 10 }}
        {{- else }}
          persistentVolumeClaim:
            claimName: {{ template "puppetserver.fullname" . }}-code-claim
        {{- end }}
        - name: puppet-puppet-storage
        {{- if .Values.puppetserver.customPersistentVolumeClaim.puppet.enable }}
          {{- toYaml .Values.puppetserver.customPersistentVolumeClaim.puppet.config | nindent 10 }}
        {{- else }}
          persistentVolumeClaim:
            claimName: {{ template "puppetserver.fullname" . }}-puppet-claim
        {{- end }}
        {{- if .Values.singleCA.enabled }}
        - name: crl-volume
          configMap:
            name: {{ template "puppetserver.fullname" . }}-crl-config
        {{- end }}
        {{- if .Values.puppetserver.customconfigs.enabled }}
        - name: puppetserver-custom-configs
          configMap:
            name: {{ template "puppetserver.fullname" . }}-custom-configs
        {{- end }}
        {{- if .Values.puppetserver.customentrypoints.enabled }}
        - name: puppetserver-customentrypoints
          configMap:
            name: {{ template "puppetserver.fullname" . }}-customentrypoints
            defaultMode: 0777
        {{- end }}
        - name: manifests-volume
          configMap:
            name: {{ template "puppetserver.fullname" . }}-manifests-config
        {{- if .Values.r10k.asSidecar }}
        {{- if .Values.puppetserver.puppeturl }}
        {{- if or (.Values.r10k.code.viaSsh.credentials.existingSecret) (and (.Values.r10k.code.viaSsh.credentials.ssh.value) (.Values.r10k.code.viaSsh.credentials.known_hosts.value)) }}
        - name: r10k-code-ssh
          secret:
            secretName: {{ template "r10k.code.viaSsh.secret" . }}
            defaultMode: 288 # = mode 0440
            items:
              - key: id_rsa
                path: id_rsa
              - key: known_hosts
                path: known_hosts
        {{- end }}
        {{- if or .Values.r10k.code.viaHttps.credentials.existingSecret .Values.r10k.code.viaHttps.credentials.netrc.value }}
        - name: r10k-code-netrc
          secret:
            secretName: {{ template "r10k.code.viaHttps.secret" . }}
            defaultMode: 288 # = mode 0440
            items:
              - key: netrc
                path: .netrc
        {{- end }}
        - name: r10k-code-volume
          configMap:
            name: {{ template "puppetserver.fullname" . }}-r10k-code-config
        {{- end }}
        {{- if (include "hiera.enable" .) }}
        - name: r10k-hiera-volume
          configMap:
            name: {{ template "puppetserver.fullname" . }}-r10k-hiera-config
        {{- end }}
        {{- if or (.Values.r10k.hiera.viaSsh.credentials.existingSecret) (and (.Values.r10k.hiera.viaSsh.credentials.ssh.value) (.Values.r10k.hiera.viaSsh.credentials.known_hosts.value)) }}
        - name: r10k-hiera-ssh
          secret:
            secretName: {{ template "r10k.hiera.viaSsh.secret" . }}
            defaultMode: 288 # = mode 0440
            items:
              - key: id_rsa
                path: id_rsa
              - key: known_hosts
                path: known_hosts
        {{- end }}
        {{- if or .Values.r10k.hiera.viaHttps.credentials.existingSecret .Values.r10k.hiera.viaHttps.credentials.netrc.value }}
        - name: r10k-hiera-netrc
          secret:
            secretName: {{ template "r10k.hiera.viaHttps.secret" . }}
            defaultMode: 288 # = mode 0440
            items:
              - key: netrc
                path: .netrc
        {{- end }}
        {{- end }}
        {{- if .Values.hiera.config }}
        - name: hiera-volume
          configMap:
            name: {{ template "puppetserver.fullname" . }}-hiera-config
        {{- end }}
        {{- if .Values.hiera.eyaml.existingSecret }}
        - name: eyaml-volume
          secret:
            secretName: {{ .Values.hiera.eyaml.existingSecret }}
        {{- else if or (.Values.hiera.eyaml.public_key) (.Values.hiera.eyaml.private_key) }}
        - name: eyamlpub-volume
          secret:
            secretName: {{ template "puppetserver.hiera.publicSecret" . }}
        - name: eyamlpriv-volume
          secret:
            secretName: {{ template "puppetserver.hiera.privateSecret" . }}
        {{- else if .Values.hiera.eyaml.existingMap  }}
        - name: eyaml-volume
          configMap:
            name: {{ .Values.hiera.eyaml.existingMap }}
        {{- end }}
        {{- range $extraSecret := .Values.puppetserver.extraSecrets }}
        - name: {{ $extraSecret.name }}
          secret:
            secretName: {{ $extraSecret.name }}
        {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | nindent 10 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
      {{ toYaml .Values.affinity | nindent 10 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{ toYaml .Values.tolerations| nindent 10 }}
      {{- end }}
      {{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1beta1") (.Values.priorityClassName) }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
{{- end }}
